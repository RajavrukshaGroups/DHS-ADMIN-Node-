<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css"
        integrity="sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4" crossorigin="anonymous" />
    <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet" />
    <title>Side Navigation Bar in HTML CSS JavaScript</title>
    <title>Defence Housing Society </title>
    <link rel="icon" href="/img/logo200.png">
    <link rel="stylesheet" href="/css/styles.css" />
    <link rel="stylesheet"
        href="https://cdnjs.cloudflare.com/ajax/libs/malihu-custom-scrollbar-plugin/3.1.5/jquery.mCustomScrollbar.min.css" />
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        @media (max-width: 768px) {
            .menu-text {
                font-size: 18px;
            }
        }

        .icons-container {
            display: flex;
            gap: 10px;
            /* Adjust as needed */
            align-items: center;
        }

        .add-more-icon {
            cursor: pointer;
        }

        .delete-icon {
            cursor: pointer;
            margin-left: auto;
        }

        .radio-container {
            display: flex;
        }

        .radio-container label {
            margin-right: 50px;
        }
    </style>
</head>
<body>
    <%- include('partials/navbar') %>
        <div id="content" style="margin-top: 6rem;">
            <span class="menu-text">Page Title</span>
            <form id="Extrachargesform" onsubmit="submituserdata(event)">
                <div class="card">
                    
                    <h3 class="card-title" style="font-weight: bold;">Edit Extra Charge User Details</h3>
                    <div class="form-row"></div>
                    <div class="form-row">
                        <input type="hidden" name="user_pk" id="user_pk" value="<%= rows[0].user_extra_pk %>"/>
                        <div class="form-group col-md-6">
                            <label for="refname">Name</label>
                            <input type="text" name="name" id="refname" class="form-control"
                                placeholder="Enter name" value="<%= rows[0].username %>" required/> 
                        </div>
                        <div class="form-group col-md-6">
                            <label for="senior_id">Seniority Id</label>
                            <input type="text" name="senior_id" id="senior_id" class="form-control"
                                placeholder="Enter seniority ID" value="<%= rows[0].senior_id %>" required/>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="projectDropdown">Project</label>
                            <select class="form-control" id="projectDropdown" name="projectDropdown">
                                <option value="" disabled>Select a Project</option>
                            </select>
                        </div>
                        <div class="form-group col-md-6">
                            <label for="plotDimensionDropdown">Property Size</label>
                            <select class="form-control" id="plotDimensionDropdown" name="plotDimensionDropdown"
                                >
                                <option value="" disabled>Select a Size</option>
                            </select>
                        </div>
                    </div>
                    <div class="form-row">
                     <% function formatDate(dateString) {
                       if (!dateString) return ''; // Handle empty or undefined dates
                       const date = new Date(dateString);
                       const year = date.getFullYear();
                       const month = ('0' + (date.getMonth() + 1)).slice(-2); // Ensures 2 digits for month
                       const day = ('0' + date.getDate()).slice(-2); // Ensures 2 digits for day
                       return `${year}-${month}-${day}`; // Format as YYYY-MM-DD
                     } %>
                                   <div class="form-group col-md-6">
                            <label for="statusDate">Paid Date</label>
                            <input type="date" id="paid_date" class="form-control" name="paid_date" value="<%= formatDate(rows[0].paid_date) %>" />
                          </div>
                          <div class="form-group col-md-6">
                            <label for="statusTitle">Total Ex.Amount </label>
                            <input type="text" name="total_extra_amnt" id="total_extra_amnt" class="form-control"
                            placeholder="Enter Amount" value="<%= rows[0].total_extra_amnt %>" required/>
                          </div>
                          <div class="form-group col-md-6">
                            <label for="statusTitle">Reference ID</label>
                            <input type="text" name="cheque_no" id="cheque_no" class="form-control"
                            placeholder="Enter seniority ID" value="<%= rows[0].cheque_no %>"/>
                          </div>
                    </div>
                    <button type="submit" class="btn btn-primary"
                        style="width: 70px; margin-top: 5px;margin-left: 25rem;">Submit</button>
            </form>
        </div>
        <!-- JavaScript -->
        <script src="/js/script.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <script>
            function submituserdata(event) {
         event.preventDefault(); // Prevent the default form submission
         const formData = new FormData(document.getElementById('Extrachargesform'));
         // Convert FormData to a regular object and then to JSON
         const jsonData = {};
         formData.forEach((value, key) => {
             jsonData[key] = value;
         });
         fetch('https://adminpanel.defencehousingsociety.com/saveEditAddExtraCharges', {
             method: 'POST',
             headers: {
                 'Content-Type': 'application/json' // Send JSON instead of FormData
             },
             body: JSON.stringify(jsonData)
         })
         .then(response => response.json())
         .then(data => {
             console.log(data);
             if (data.message ==='User Editted Successfully') {
                 alert("User updated successfully");
                 window.location.href = '/viewUserExtraCharges'; 
             } else {
                 alert("Error updating user");
             }
         })
         .catch(error => {
             console.error("Error:", error);
         });
     }
         </script>
      <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
            document.addEventListener("DOMContentLoaded", () => {
                const selectedProject = "<%= rows[0].pro_name %>";         
                const selectedDimension = "<%= rows[0].prop_dimension %>";
                fetch("/project/projectNames")
                    .then((response) => response.json())
                    .then((data) => {
                        const projectDropdown = document.getElementById("projectDropdown");
                        data.forEach((project) => {
                            const option = document.createElement("option");
                            option.value = project.project_id;
                            option.textContent = project.pro_name;
                            if (project.pro_name === selectedProject) {
                            option.selected = true; 
                             }
                            projectDropdown.appendChild(option);
                        });
                    });
                    fetch("/project/plotDimensions")
                    .then((response) => response.json())
                    .then((data) => {
                        const plotDimensionDropdown = document.getElementById("plotDimensionDropdown");
                        data.forEach((dimension) => {
                        const option = document.createElement("option");
                        option.value = dimension.dimension;
                        option.textContent = dimension.dimension;
                        if (dimension.dimension === selectedDimension) {
                            option.selected = true; // Select the dimension that matches the current user's value
                        }
                        plotDimensionDropdown.appendChild(option);
                        });
                    });
                    
                }
            );
        </script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js"
            integrity="sha384-uefMccjFJAIv6A+rW+L4AHf99KvxDjWSu1z9VI8SKNVmz4sk7buKt/6v9KI65qnm" crossorigin="anonymous">
            </script>
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const seniorityIdFrom = document.getElementById('seniorityIdFrom');
                const seniorityIdsList = document.getElementById('seniorityIdsList');
                const Extrachargesname = document.getElementById('Extrachargesname');
                const ExtrachargesmobileNumber = document.getElementById('ExtrachargesmobileNumber');
                const email = document.getElementById('email');
                const residenceAddress = document.getElementById('residenceAddress');
                seniorityIdFrom.addEventListener('input', function () {
                    fetch('/plots/sen_id')
                        .then(response => response.json())
                        .then(data => {
                            console.log(data,'data is getting here');
                            seniorityIdsList.innerHTML = '' ;
                            data.forEach(item =>{
                                const option = document.createElement('option');
                                option.value = item.user_seniority_id;
                                seniorityIdsList.appendChild(option);
                            });
                        })                                                                        
                        .catch(error => console.error('Error fetching seniority IDs:', error));
                });
                $('#submissionStatusModal').on('hidden.bs.modal', function () {
                    clearInputFields();
                });
            });
        </script>
</body>
</html>