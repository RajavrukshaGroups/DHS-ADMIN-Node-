<!-- views/home.ejs -->
<!DOCTYPE html>
<!-- Coding by CodingNepal || www.codingnepalweb.com -->
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <!-- <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script> -->

    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css"
      integrity="sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4"
      crossorigin="anonymous"
    />
    <!-- Boxicons CSS -->
    <link
      href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css"
      rel="stylesheet"
    />
    <title>Defence Housing Soceity</title>
    <link rel="icon" href="/img/logo200.png" />
    <link rel="stylesheet" href="/css/styles.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/malihu-custom-scrollbar-plugin/3.1.5/jquery.mCustomScrollbar.min.css"
    />
    <link
      href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
      rel="stylesheet"
    />

    <style>
      /* Responsive adjustments */
      @media (max-width: 768px) {
        .menu-text {
          font-size: 18px;
        }
      }

      .icons-container {
        display: flex;
        gap: 10px;
        /* Adjust as needed */
        align-items: center;
      }

      .add-more-icon {
        cursor: pointer;
      }

      .delete-icon {
        cursor: pointer;
        margin-left: auto;
      }

      .radio-container {
        display: flex;
        /* justify-content: space-between; Adjust alignment as needed */
      }

      .radio-container label {
        margin-right: 50px;
        /* Adjust spacing between radio buttons */
      }
    </style>
  </head>

  <body>
    <%- include('partials/navbar') %>

    <!-- Add your card here -->
    <div id="content" style="margin-top: 6rem">
      <!-- Content Goes Here -->
      <span class="menu-text">Page Title</span>
      <!-- Form Inside Card -->
      <form id="userDataForm">
        <div class="card">
          <h3 class="card-title">Add Receipt</h3>
          <div class="form-row">
            <div class="form-group col-md-6">
              <label for="recno">Receipt NO :</label>
              <input type="text" name="recno" id="recno" class="form-control" />
            </div>
            <div class="form-group col-md-6">
              <label for="date">Date :</label>
              <input type="date" id="date" class="form-control" name="date" />
            </div>

            <div class="form-group col-md-6">
              <label for="cname">Name:</label>
              <input type="text" name="cname" id="cname" class="form-control" />
            </div>
            <div class="form-group col-md-6">
              <label for="cAddress"> Address :</label>
              <textarea
                id="cAddress"
                class="form-control"
                rows="1"
                name="cAddress"
              ></textarea>
            </div>
          </div>
        </div>

        <!-- Payment Section -->

        <div id="paymentDetailsContainer">
          <div class="card payment-card">
            <h3 class="card-title">Payment Details</h3>
            <!-- Payment Type Dropdown -->
            <div class="form-row">
              <div class="form-group col-md-6">
                <label for="paymentTypeDropdown">Payment Type:</label>
                <select
                  class="form-control payment-type-dropdown"
                  name="paymentTypeDropdown"
                  id="paymentTypeDropdown"
                  required
                >
                  <option value="" selected disabled>
                    Choose payment type
                  </option>
                  <option value="advance">Site Advance</option>
                  <option value="downPayment">Site Down Payment</option>
                  <option value="installment">Installments</option>
                </select>
              </div>
              <!-- Payment Mode Dropdown -->
              <div class="form-group col-md-6">
                <label for="paymentModeDropdown">Payment Mode:</label>
                <select
                  id="paymentModeDropdown"
                  class="form-control payment-mode-dropdown"
                  name="paymentModeDropdown"
                  required
                  onchange="handlePaymentModeChange(this)"
                >
                  <option value="" selected disabled>
                    Choose payment mode
                  </option>
                  <option value="cheque">Cheque</option>
                  <option value="netbanking">Netbanking/UPI</option>
                  <option value="cash">Cash</option>
                  <option value="dd">DD</option>
                </select>
              </div>
            </div>

            <!-- Input Fields -->
            <div class="form-row">
              <div class="form-group col-md-6" id="bankNameGroup">
                <label for="bankName">Bank Name:</label>
                <input
                  type="text"
                  class="form-control bank-name-input"
                  id="bankNameInput"
                  name="bankNameInput"
                />
              </div>
              <div class="form-group col-md-6" id="branchNameGroup">
                <label for="branchName">Branch Name:</label>
                <input
                  type="text"
                  class="form-control branch-name-input"
                  id="branchNameInput"
                  name="branchNameInput"
                />
              </div>
            </div>

            <div class="form-row">
              <div class="form-group col-md-6">
                <label for="amount">Amount:</label>
                <input
                  type="text"
                  class="form-control amount-input"
                  id="amount"
                  name="amount"
                  required
                />
              </div>
              <!--<div class="form-group col-md-6">-->
              <!--    <label for="paymentDate">Payment Date:</label>-->
              <!--    <input type="date" class="form-control payment-date-input" id="paymentDate" name="paymentDate" required />-->
              <!--</div>-->
            </div>
            <div class="form-row">
              <div
                id="dynamicField"
                style="display: none"
                class="form-group col-md-6"
              >
                <label id="dynamicLabel" for="dynamicInput"
                  >Dynamic Field:</label
                >
                <input
                  type="text"
                  class="form-control dynamic-input"
                  id="dynamicInput"
                  name="dynamicInput"
                />
              </div>

              <!-- Installments Dropdown (Initially Hidden) -->
              <div
                class="form-group installments-dropdown col-md-6"
                style="display: none"
              >
                <label for="installmentsDropdown">Installments:</label>
                <select
                  class="form-control installments-dropdown"
                  id="installmentsDropdown"
                  name="installmentsDropdown"
                >
                  <option value="" selected disabled>Choose installment</option>
                  <option value="installment1">Installment 1</option>
                  <option value="installment2">Installment 2</option>
                  <option value="installment3">Installment 3</option>
                </select>
              </div>
            </div>

            <!-- Add More Icon -->
            <!--<div class="icons-container">-->
            <!--    <div class="add-more-icon">-->
            <!--        <i class="bx bx-plus-circle" onclick="addPaymentCard(this)" style="color: black">Add Additional payment Detail</i>-->
            <!--    </div>-->
            <!--    <div class="delete-icon" style="display: none">-->
            <!--        <i class="bx bx-trash" onclick="deletePaymentCard(this)" style="color: red">Delete the Card</i>-->
            <!--    </div>-->
            <!--</div>-->
          </div>
        </div>

        <div class="card">
          <div class="form-row">
            <div class="form-group col-md-12 text-center">
              <button class="btn btn-success" type="submit">Add</button>
              <button class="btn btn-danger" id="cancelBtn">Cancel</button>
            </div>
          </div>
        </div>
      </form>
    </div>

    <!-- JavaScript -->
    <script src="/js/script.js"></script>
    <!-- <script src="/js/adduser.js"></script> -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script
      src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js"
      integrity="sha384-uefMccjFJAIv6A+rW+L4AHf99KvxDjWSu1z9VI8SKNVmz4sk7buKt/6v9KI65qnm"
      crossorigin="anonymous"
    ></script>
    <!-- payment section -->
    <script>
      // Function to delete a payment card
      function deletePaymentCard(iconElement) {
        const paymentCard = iconElement.closest(".payment-card");
        paymentCard.remove();
      }

      function handlePaymentModeChange(paymentModeDropdown) {
        const dynamicField = paymentModeDropdown
          .closest(".payment-card")
          .querySelector("#dynamicField");
        const dynamicLabel = paymentModeDropdown
          .closest(".payment-card")
          .querySelector("#dynamicLabel");
        const bankNameGroup = paymentModeDropdown
          .closest(".payment-card")
          .querySelector("#bankNameGroup");
        const branchNameGroup = paymentModeDropdown
          .closest(".payment-card")
          .querySelector("#branchNameGroup");

        if (paymentModeDropdown.value === "dd") {
          dynamicLabel.textContent = "DD Number:";
          dynamicField.style.display = "block";
          bankNameGroup.style.display = "block";
          branchNameGroup.style.display = "block";
        } else if (paymentModeDropdown.value === "netbanking") {
          dynamicLabel.textContent = "Transaction ID / UTR No:";
          dynamicField.style.display = "block";
          bankNameGroup.style.display = "block";
          branchNameGroup.style.display = "block";
        } else if (paymentModeDropdown.value === "cheque") {
          dynamicLabel.textContent = "Cheque Number:";
          dynamicField.style.display = "block";
          bankNameGroup.style.display = "block";
          branchNameGroup.style.display = "block";
        } else if (paymentModeDropdown.value === "cash") {
          dynamicField.style.display = "none";
          bankNameGroup.style.display = "none";
          branchNameGroup.style.display = "none";
        }
      }

      function addPaymentCard(iconElement) {
        const paymentCard = iconElement.closest(".payment-card");
        const clonedCard = paymentCard.cloneNode(true);

        // Reset payment type dropdown value and other fields
        const paymentTypeDropdown = clonedCard.querySelector(
          ".payment-type-dropdown"
        );
        if (paymentTypeDropdown) {
          paymentTypeDropdown.value = "";
        }
        clonedCard.querySelector("#bankNameInput").value = "";
        clonedCard.querySelector("#branchNameInput").value = "";
        clonedCard.querySelector("#amount").value = "";
        // clonedCard.querySelector("#paymentDate").value = "";
        clonedCard.querySelector("#dynamicInput").value = "";

        // Append cloned card to the container
        document
          .getElementById("paymentDetailsContainer")
          .appendChild(clonedCard);

        // Attach event listener to delete icon in the cloned card
        const deleteIcon = clonedCard.querySelector(".delete-icon");
        if (deleteIcon) {
          deleteIcon.style.display = "block";
          deleteIcon.addEventListener("click", function () {
            deletePaymentCard(this);
          });
        }

        // Show or hide Installments dropdown based on payment type
        const clonedPaymentTypeDropdown = clonedCard.querySelector(
          ".payment-type-dropdown"
        );
        const clonedInstallmentsDropdown = clonedCard.querySelector(
          ".installments-dropdown"
        );
        if (clonedPaymentTypeDropdown && clonedInstallmentsDropdown) {
          clonedPaymentTypeDropdown.addEventListener("change", function () {
            if (this.value === "installment") {
              clonedInstallmentsDropdown.style.display = "block";
            } else {
              clonedInstallmentsDropdown.style.display = "none";
            }
          });
        }
      }

      document
        .querySelectorAll(".payment-type-dropdown")
        .forEach((dropdown) => {
          dropdown.addEventListener("change", function () {
            const installmentsDropdown = this.closest(
              ".payment-card"
            ).querySelector(".installments-dropdown");
            if (this.value === "installment") {
              installmentsDropdown.style.display = "block";
            } else {
              installmentsDropdown.style.display = "none";
            }
          });
        });

      document.addEventListener("DOMContentLoaded", () => {
        const urlParams = new URLSearchParams(window.location.search);
        const userId = urlParams.get("userId");
        const thUserPk = urlParams.get("thUserPk");

        const deletePaymentCard = (element) => {
          element.closest(".payment-card").remove();
        };

        const handleSubmit = (event) => {
          event.preventDefault();

          const paymentCards = document.querySelectorAll(".payment-card");
          const paymentDetails = Array.from(paymentCards).map((card) => {
            const paymentType = card.querySelector(
              ".payment-type-dropdown"
            ).value;
            const paymentMode = card.querySelector(
              ".payment-mode-dropdown"
            ).value;
            const dynamicInput = card.querySelector(".dynamic-input");
            // const installmentsDropdown = document.querySelector('#installmentsDropdown');
            const installmentsDropdown = card.querySelector(
              "#installmentsDropdown"
            );
            const installments = installmentsDropdown
              ? installmentsDropdown.value
              : null; // Check if the element exists

            console.log("installments", installments); // Debug log for installments value

            return {
              recno: document.getElementById("recno").value,
              receiptaddress: document.getElementById("cAddress").value,

              date: document.getElementById("date").value,
              paymentType: paymentType,
              paymentMode: paymentMode,
              bankName: card.querySelector(".bank-name-input").value,
              branchName: card.querySelector(".branch-name-input").value,
              amount: card.querySelector(".amount-input").value,
              // paymentDate: card.querySelector('.payment-date-input').value,
              chequeDdTransactionId: dynamicInput ? dynamicInput.value : null,
              cr_installment: installments,
              // chequeNo: paymentMode === 'cheque' ? dynamicInput.value : null,
              // transactionId: paymentMode === 'netbanking' ? dynamicInput.value : null,
              // ddNo: paymentMode === 'dd' ? dynamicInput.value : null,
              // Include the correct installment value
            };
          });

          fetch("/users/insert_receipt", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              userId: userId,
              thUserPk: thUserPk,
              paymentDetails: paymentDetails,
            }),
          })
            .then((response) => {
              if (!response.ok) throw new Error("Network response was not ok");
              return response.json();
            })
            .then((data) => {
              alert("Receipts inserted successfully");
              window.location.href = "/viewuser";
            })
            .catch((error) => {
              alert("Error while inserting receipt");
              window.location.href = "/viewuser";

              console.error("Error inserting receipts:", error);
            });
        };

        document
          .getElementById("userDataForm")
          .addEventListener("submit", handleSubmit);
      });
    </script>

    <!-- name and useraddress -->
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const urlParams = new URLSearchParams(window.location.search);
        const userId = urlParams.get("userId");

        fetch(`/users/viewmembers/${userId}`)
          .then((response) => {
            if (!response.ok) {
              throw new Error("Network response was not ok");
            }
            return response.json();
          })
          .then((userData) => {
            // Check if userData is an array and has at least one element
            if (Array.isArray(userData) && userData.length > 0) {
              // Access the username property of the first object in the array
              console.log(userData[0].username);
              document.getElementById("cname").value = userData[0].username;
              document.getElementById('cAddress').value = userData[0].user_address;
            } else {
              console.error("User data is empty or not in the expected format");
            }
          })
          .catch((error) => {
            console.error("Error fetching user data:", error);
            alert(
              "An error occurred while fetching user data. Please try again later."
            );
          });
      });
    </script>
    <script>
      document
        .getElementById("cancelBtn")
        .addEventListener("click", function () {
          // Display a confirmation dialog
          var confirmCancel = confirm("Are you sure you want to cancel?");

          // If the user confirms, redirect to /viewuser
          if (confirmCancel) {
            window.location.href = "/viewuser";
          }
        });
    </script>
  </body>
</html>
