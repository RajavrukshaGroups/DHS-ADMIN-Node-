<!-- views/home.ejs -->
<!DOCTYPE html>
<!-- Coding by CodingNepal || www.codingnepalweb.com -->
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <!-- <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script> -->

    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css"
      integrity="sha384-9gVQ4dYFwwWSjIDZnLEWnxCjeSWFphJiwGPXr1jddIhOegiu1FwO5qRGvFXOdJZ4"
      crossorigin="anonymous"
    />
    <!-- Boxicons CSS -->
    <link
      href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css"
      rel="stylesheet"
    />
    <title>Defence Housing Soceity</title>
    <link rel="icon" href="/img/logo200.png" />
    <link rel="stylesheet" href="/css/styles.css" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/malihu-custom-scrollbar-plugin/3.1.5/jquery.mCustomScrollbar.min.css"
    />
    <link
      href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
      rel="stylesheet"
    />

    <style>
      /* Responsive adjustments */
      @media (max-width: 768px) {
        .menu-text {
          font-size: 18px;
        }
      }

      .card-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
      }

      .icons-container {
        display: flex;
        gap: 10px;
        /* Adjust as needed */
        align-items: center;
      }

      .add-more-icon {
        cursor: pointer;
      }

      .delete-icon {
        cursor: pointer;
        margin-left: auto;
      }

      .radio-container {
        display: flex;
        /* justify-content: space-between; Adjust alignment as needed */
      }

      .radio-container label {
        margin-right: 50px;
        /* Adjust spacing between radio buttons */
      }
    </style>
  </head>

  <body>
    <%- include('partials/navbar') %>

    <!-- Add your card here -->
    <div id="content" style="margin-top: 6rem">
      <!-- Content Goes Here -->
      <span class="menu-text">Page Title</span>
      <!-- Form Inside Card -->

      <div class="card">
        <form id="projectForm">
          <div id="alertContainer"></div>
          <h3 class="card-title">Add New Project Details</h3>

          <div class="form-row">
            <div class="form-group col-md-6">
              <label for="projectName">Project Name:</label>
              <input
                type="text"
                class="form-control"
                id="projectName"
                name="projectName"
                required
              />
            </div>

            <div class="form-group col-md-6">
              <label for="shortCode">Short Code:</label>
              <input
                type="text"
                class="form-control"
                id="shortCode"
                name="shortCode"
                required
              />
            </div>
          </div>
          <div class="form-group">
            <label>Status:</label><br />
            <div class="radio-container">
              <label for="currentProject">
                <input
                  type="radio"
                  id="currentProject"
                  name="status"
                  value="current"
                  required
                />
                Current Project
              </label>
              <label for="completedProject">
                <input
                  type="radio"
                  id="completedProject"
                  name="status"
                  value="completed"
                  required
                />
                Completed Project
              </label>
            </div>
          </div>

          <button
            type="submit"
            class="btn btn-primary"
            onclick="submitForm(this.form, event)"
            style="width: 70px; margin-top: 5px"
          >
            Submit
          </button>
        </form>
      </div>

      <div class="card">
        <form id="projectForm">
          <div id="Containeralert"></div>
          <h3 class="card-title">Add Available Plot Dimensions</h3>

          <div class="form-row">
            <div class="form-group col-md-6">
              <label for="projectlength">Length:</label>
              <input
                type="text"
                id="projectlength"
                class="form-control"
                name="projectlength"
                required
              />
            </div>

            <div class="form-group col-md-6">
              <label for="projectbreadth">Breadth:</label>
              <input
                type="text"
                id="projectbreadth"
                class="form-control"
                name="projectbreadth"
                required
              />
            </div>
          </div>

          <button
            type="submit"
            class="btn btn-primary"
            onclick="plotsubmitForm(this.form, event)"
            style="width: 70px; margin-top: 5px"
          >
            Submit
          </button>
        </form>
      </div>

    

      <div class="card">
        <h3 class="card-title">Add Land Details</h3>
        <form id="projectDetails">
          <div id="alertcon"></div>

          <div class="form-row">
            <div class="form-group col-md-6">
              <label for="projectDropdown">Project</label>
              <select class="form-control" id="projectDropdown" required>
                <option value="" selected disabled>Choose an option</option>
              </select>
            </div>
            <div class="form-group col-md-6">
              <label for="plotDimensionDropdown">Property Size</label>
              <select class="form-control" id="plotDimensionDropdown" required>
                <option value="" selected disabled>Choose an option</option>
              </select>
            </div>
          </div>
          <div class="form-row">
            <div class="form-group col-md-6">
              <label for="perSqftPrice">Per Sqft Property Price</label>
              <input
                type="text"
                id="perSqftPrice"
                class="form-control"
                name="perSqftPrice"
                oninput="calculateCosts()"
                placeholder="Enter per sqft property price"
              />
            </div>
            <div class="form-group col-md-6">
              <label for="selectedPropertyCost">Selected Property Cost</label>
              <input
                type="text"
                id="selectedPropertyCost"
                class="form-control"
                name="selectedPropertyCost"
                readonly
              />
            </div>
          </div>

          <button
            type="submit"
            onsubmit="handleSubmitForm()"
            class="btn btn-primary"
            style="width: 70px; margin-top: 5px"
          >
            Submit
          </button>
        </form>
      </div>
    </div>

    <!-- JavaScript -->
    <script src="/js/script.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script
      src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js"
      integrity="sha384-uefMccjFJAIv6A+rW+L4AHf99KvxDjWSu1z9VI8SKNVmz4sk7buKt/6v9KI65qnm"
      crossorigin="anonymous"
    ></script>

    <script>
      function submitForm(formElement, event) {
        event.preventDefault();

        const alertContainer = document.getElementById("alertContainer");
        alertContainer.innerHTML = "";

        const projectName = formElement
          .querySelector("#projectName")
          .value.trim();
        const shortCode = formElement.querySelector("#shortCode").value.trim();
        const status = formElement.querySelector(
          'input[name="status"]:checked'
        );

        if (!projectName || !shortCode || !status) {
          alertContainer.innerHTML = `
      <div class="alert alert-danger alert-dismissible fade show" role="alert">
        All Fields are required
                </div>`;
          setTimeout(() => {
            alertContainer.innerHTML = "";
          }, 3000);
          return;
        }

        const formData = new FormData(formElement);

        // Convert FormData to JSON
        const formDataJson = {};
        formData.forEach((value, key) => {
          formDataJson[key] = value;
        });

        const requestData = {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(formDataJson),
        };

        const submitButton = formElement.querySelector('button[type="submit"]');
        submitButton.disabled = true;

        fetch("/project/addProject", requestData)
          .then((response) => {
            return response.json().then((data) => {
              if (!response.ok) {
                // Create an error object that contains both the response status and the error message from the server
                const error = new Error(
                  data.error || "Network response was not ok"
                );
                error.status = response.status;
                throw error;
              }
              return data;
            });
          })
          .then((data) => {
            // Clear form fields
            formElement.reset();
            alertContainer.innerHTML = `<div class="alert alert-success alert-dismissible fade show" role="alert">
                    The project details have been successfully added
                </div>`;
            setTimeout(() => {
              alertContainer.innerHTML = "";
            }, 3000);

         
          })
          .catch((error) => {
            console.error(
              "There was a problem with the fetch operation:",
              error
            );

            // const alertContainer = document.getElementById("alertContainer");
            alertContainer.innerHTML = `<div class="alert alert-danger alert-dismissible fade show" role="alert">
           There was a problem adding the project details:${error.message};
            </div>`;
            setTimeout(() => {
              alertContainer.innerHTML = "";
            }, 3000);
          })
          .finally(() => {
            submitButton.disabled = false;
          });
      }

      function plotsubmitForm(formElement, event) {
        event.preventDefault(); // Prevent default form submission

        const alertContainer = document.getElementById("Containeralert");
        alertContainer.innerHTML = ""; // Clear previous alerts

        // Front-End Validation
        const projectlength = formElement
          .querySelector("#projectlength")
          .value.trim();
        const projectbreadth = formElement
          .querySelector("#projectbreadth")
          .value.trim();

        if (!projectlength || !projectbreadth) {
          alertContainer.innerHTML = `
      <div class="alert alert-danger alert-dismissible fade show" role="alert">
        All fields are required.
      </div>`;
          setTimeout(() => {
            alertContainer.innerHTML = "";
          }, 3000);
          return;
        }

        // Convert FormData to JSON
        const formData = new FormData(formElement);
        const formDataJson = {};
        formData.forEach((value, key) => {
          formDataJson[key] = value;
        });

        const requestData = {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(formDataJson),
        };

        // Disable the submit button to prevent multiple submissions
        const submitButton = formElement.querySelector('button[type="submit"]');
        submitButton.disabled = true;

        fetch("/project/plotsize", requestData)
          .then((response) => {
            return response.json().then((data) => {
              if (!response.ok) {
                const error = new Error(
                  data.error || "Network response was not ok"
                );
                error.status = response.status;
                throw error;
              }
              return data;
            });
          })
          .then((data) => {
            // Clear form fields
            formElement.reset();

            alertContainer.innerHTML = `
        <div class="alert alert-success alert-dismissible fade show" role="alert">
          The plot dimensions have been successfully added.
        </div>`;
            setTimeout(() => {
              alertContainer.innerHTML = "";
            }, 3000);
          })
          .catch((error) => {
            console.error(
              "There was a problem with the fetch operation:",
              error
            );

            alertContainer.innerHTML = `
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
          There was a problem adding the plot dimensions: ${error.message}.
        </div>`;
            setTimeout(() => {
              alertContainer.innerHTML = "";
            }, 3000);
          })
          .finally(() => {
            // Re-enable the submit button after the operation
            submitButton.disabled = false;
          });
      }

      document.addEventListener("DOMContentLoaded", () => {
        fetch("/project/projectNames")
          .then((response) => response.json())
          .then((data) => {
            const projectDropdown = document.getElementById("projectDropdown");
            data.forEach((project) => {
              const option = document.createElement("option");
              option.value = project.pro_name;
              option.textContent = project.pro_name;
              projectDropdown.appendChild(option);
            });
          })
          .catch((error) =>
            console.error("Error fetching project names:", error)
          );

        fetch("/project/plotDimensions")
          .then((response) => response.json())
          .then((data) => {
            const plotDimensionDropdown = document.getElementById(
              "plotDimensionDropdown"
            );
            data.forEach((dimension) => {
              const option = document.createElement("option");
              option.value = dimension.dimension;
              option.textContent = dimension.dimension;
              plotDimensionDropdown.appendChild(option);
            });
          })
          .catch((error) =>
            console.error("Error fetching plot dimensions:", error)
          );
      });

  
      function calculateCosts() {
        const propertySize = document
          .getElementById("plotDimensionDropdown")
          .value.trim();
        const perSqftPrice = parseFloat(
          document.getElementById("perSqftPrice").value
        );

        if (!propertySize || isNaN(perSqftPrice)) {
          alert(
            "Please enter valid values for Property Size and Per Sqft Property Price."
          );
          return;
        }

        // Extract dimensions from property size input (e.g., "50X100")
        const dimensions = propertySize
          .split("X")
          .map((dim) => parseFloat(dim.trim()));

        if (dimensions.length !== 2 || dimensions.some((dim) => isNaN(dim))) {
          alert(
            'Please enter a valid property size in the format "length x width".'
          );
          return;
        }

        const selectedPropertyCost =
          dimensions[0] * dimensions[1] * perSqftPrice;
        document.getElementById("selectedPropertyCost").value =
          selectedPropertyCost.toFixed(2);
      }

  
      function handleSubmitForm() {
        const form = document.getElementById("projectDetails");
        form.addEventListener("submit", async (event) => {
          event.preventDefault(); // Prevent default form submission

          const alertContainer = document.getElementById("alertcon");
          alertContainer.innerHTML = ""; // Clear previous alerts

          const projectDropdown = document
            .getElementById("projectDropdown")
            .value.trim();
          const plotDimensionDropdown = document
            .getElementById("plotDimensionDropdown")
            .value.trim();
          const plotAmount = document
            .getElementById("selectedPropertyCost")
            .value.trim();

          // Front-End Validation
          if (!projectDropdown || !plotDimensionDropdown || !plotAmount) {
            alertContainer.innerHTML = `
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
          All fields are required.
        </div>`;
            setTimeout(() => {
              alertContainer.innerHTML = "";
            }, 3000);
            return;
          }

          const requestData = {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              projectDropdown,
              plotDimensionDropdown,
              plotAmount,
            }),
          };

          // Disable the submit button to prevent multiple submissions
          const submitButton = form.querySelector('button[type="submit"]');
          submitButton.disabled = true;

          try {
            const response = await fetch(
              "/project/saveProjectLand",
              requestData
            );
            const data = await response.json();

            if (response.ok) {
              // Clear form fields
              form.reset();

              alertContainer.innerHTML = `
          <div class="alert alert-success alert-dismissible fade show" role="alert">
            ${data.message || "The land details have been successfully added."}
          </div>`;
              setTimeout(() => {
                alertContainer.innerHTML = "";
              }, 3000);
            } else {
              alertContainer.innerHTML = `
          <div class="alert alert-danger alert-dismissible fade show" role="alert">
            ${data.error || "There was an issue saving the land details."}
          </div>`;
              setTimeout(() => {
                alertContainer.innerHTML = "";
              }, 3000);
            }
          } catch (error) {
            console.error(
              "There was a problem with the fetch operation:",
              error
            );

            alertContainer.innerHTML = `
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
          There was a problem with the fetch operation: ${error.message}
        </div>`;
          } finally {
            // Re-enable the submit button
            submitButton.disabled = false;
          }
        });
      }

      // Initialize the form handler on page load
      document.addEventListener("DOMContentLoaded", handleSubmitForm);
    </script>
  </body>
</html>
